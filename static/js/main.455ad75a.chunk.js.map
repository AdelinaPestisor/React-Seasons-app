{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Loader","class","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAIMA,EAAe,CACjBC,OAAQ,CACJC,KAAK,uBACLC,SAAS,OAGbC,OAAQ,CACJF,KAAK,sBACLC,SAAS,cA4BFE,EAfO,SAACC,GACnB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARrC,GAAKH,EAAQ,EACbD,EAAM,EAAI,SAAW,SAErBA,EAAO,EAAI,SAAW,UAMhC,EAAwBP,EAAaS,GAA9BP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,SAEb,OACJ,sBAAKS,UAAS,yBAAoBH,GAAlC,UACI,mBAAGG,UAAS,4BAA0BT,EAA1B,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAA2BT,EAA3B,eC/BVU,EAAU,SAACP,GAEb,OAEQ,qBAAKQ,MAAM,mBAAX,SACI,qBAAKA,MAAM,qBAAX,SAAiCR,EAAMS,aAMvDF,EAAOG,aAAe,CAClBD,QAAU,cAGCF,QCVTI,G,kNAEFC,MAAQ,CAACX,IAAK,KAAMY,aAAa,I,uDAEjC,WAAoB,IAAD,OACfC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAClB,IAAKiB,EAASE,OAAOC,cAChD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,aAAcS,EAAIb,e,2BAIhD,WAEI,OAAGc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMX,IAC/B,kDAAqBsB,KAAKX,MAAMC,iBAGvCU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMX,IAC/B,cAAC,EAAD,CAAeA,IAAKsB,KAAKX,MAAMX,MAG/B,cAAC,EAAD,CAAQQ,QAAU,+C,oBAIjC,WACG,OAAO,qBAAKH,UAAU,SAAf,SAAyBiB,KAAKC,sB,GA1B1BC,IAAMC,YA8BxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.455ad75a.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\r\nimport React from \"react\";\r\n\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text:\"Let's hit the beach!\",\r\n        iconName:\"sun\"\r\n\r\n    },\r\n    winter: {\r\n        text:\"Brrrr! It's chilly!\",\r\n        iconName:\"snowflake\"\r\n\r\n    }\r\n}\r\n\r\nconst getSeason = (lat, month) =>{\r\n   if(month > 2 && month < 9){\r\n       return lat > 0 ? \"summer\" : \"winter\";\r\n   } else {\r\n       return lat  > 0 ? \"winter\" : \"summer\";\r\n   }\r\n}\r\n\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const {text, iconName} =seasonConfig[season];\r\n\r\n    return(\r\n<div className={`season-display ${season}`}>\r\n    <i className  = {`icon-left massive ${iconName} icon`} />\r\n    <h1>{text}</h1>\r\n    <i className  = {`icon-right massive ${iconName} icon`} />\r\n\r\n</div>\r\n\r\n    );\r\n}\r\n\r\nexport default SeasonDisplay;","import React from \"react\";\r\n\r\nconst Loader =  (props) =>{\r\n    \r\n    return(\r\n       \r\n            <div class=\"ui active dimmer\">\r\n                <div class=\"ui big text loader\">{props.message}</div>\r\n            </div>\r\n            \r\n    );\r\n};\r\n\r\nLoader.defaultProps = {\r\n    message : \"Loading...\"\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';  \r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Loader from './Loader';\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\n\r\nclass App extends React.Component {\r\n   \r\n    state = {lat: null, errorMessage:\"\"}\r\n\r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({lat: position.coords.latitude}),\r\n            err => this.setState({errorMessage: err.message})            \r\n      );\r\n    } \r\n\r\n    renderContent() {\r\n        \r\n        if(this.state.errorMessage && !this.state.lat){\r\n            return <div>Error Message: {this.state.errorMessage}</div>\r\n        }\r\n\r\n        if(!this.state.errorMessage && this.state.lat){\r\n            return <SeasonDisplay lat={this.state.lat}/>\r\n        }\r\n\r\n            return <Loader message = \"Please allow us to use your location... \"/>\r\n        \r\n    }     \r\n\r\n    render(){\r\n       return <div className=\"border\">{this.renderContent()}</div>\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));  "],"sourceRoot":""}